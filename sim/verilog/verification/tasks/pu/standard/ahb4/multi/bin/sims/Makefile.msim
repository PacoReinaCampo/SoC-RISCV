###################################################################################
##                                            __ _      _     _                  ##
##                                           / _(_)    | |   | |                 ##
##                __ _ _   _  ___  ___ _ __ | |_ _  ___| | __| |                 ##
##               / _` | | | |/ _ \/ _ \ '_ \|  _| |/ _ \ |/ _` |                 ##
##              | (_| | |_| |  __/  __/ | | | | | |  __/ | (_| |                 ##
##               \__, |\__,_|\___|\___|_| |_|_| |_|\___|_|\__,_|                 ##
##                  | |                                                          ##
##                  |_|                                                          ##
##                                                                               ##
##                                                                               ##
##              MPSoC-RV64 CPU                                                   ##
##              Regression Test Makefile                                         ##
##                                                                               ##
###################################################################################

###################################################################################
##                                                                               ##
## Copyright (c) 2017-2018 by the author(s)                                      ##
##                                                                               ##
## Permission is hereby granted, free of charge, to any person obtaining a copy  ##
## of this software and associated documentation files (the "Software"), to deal ##
## in the Software without restriction, including without limitation the rights  ##
## to use, copy, modify, merge, publish, distribute, sublicense, and/or sell     ##
## copies of the Software, and to permit persons to whom the Software is         ##
## furnished to do so, subject to the following conditions:                      ##
##                                                                               ##
## The above copyright notice and this permission notice shall be included in    ##
## all copies or substantial portions of the Software.                           ##
##                                                                               ##
## THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR    ##
## IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,      ##
## FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE   ##
## AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER        ##
## LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, ##
## OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN     ##
## THE SOFTWARE.                                                                 ##
##                                                                               ##
## ============================================================================= ##
## Author(s):                                                                    ##
##   Francisco Javier Reina Campo <pacoreinacampo@queenfield.tech>               ##
##                                                                               ##
###################################################################################

all: sim

#################################################################
# Make Targets
#################################################################
SIM_OPTS =-c -L pmi_work -L ovi_ecp5um
VLOG_OPTS=-timescale 1ns/1ps

.PHONY: sim simw clean

LOG = log/$(TOP).log

ifdef PLI
ifneq ($(PLI),"")
  PLI_OPTS = -pli $(PLI)
endif
endif

sim: vlog $(PLI)
	echo "--- Running sim"
	vsim $(SIM_OPTS) $(PLI_OPTS)			\
	  -l $(LOG) $(TOP)				\
	  -do "run -all; quit"				\
	  $(foreach p, $(PARAMS),-g`echo $p | sed -r 's/(\w+)=([^0-9].*)/\1="\2"/'`)

simw: vlog $(PLI)
	echo "--- Running sim"
	vsim $(SIM_OPTS) $(PLI_OPTS)			\
	 -l $(LOG) $(TOP) 				\
	 -voptargs=+acc +access +r -wlf $(LOG).wlf	\
	 -do "set WildcardFilter [lsearch -not -all -inline $$WildcardFilter Memory];				\
	 log -r -rec /$(TOP)/*; 										\
	 log /$(TOP)/soc_top/cpu_subsys/riscv_top/core/int_rf/rf;						\
	 log /$(TOP)/soc_top/cpu_subsys/riscv_top/core/du_unit/dbg;						\
	 log /$(TOP)/soc_top/cpu_subsys/riscv_top/imem_ctrl_inst/cache_blk/pma_blk/pmachk_inst/pma_cfg_i;	\
	 log /$(TOP)/soc_top/cpu_subsys/riscv_top/imem_ctrl_inst/cache_blk/pma_blk/pmachk_inst/pma_adr_i;	\
	 log /$(TOP)/soc_top/cpu_subsys/riscv_top/imem_ctrl_inst/cache_blk/pma_blk/pmachk_inst/pma_ub;		\
	 log /$(TOP)/soc_top/cpu_subsys/riscv_top/imem_ctrl_inst/cache_blk/pma_blk/pmachk_inst/pma_lb;		\
	 log /$(TOP)/soc_top/cpu_subsys/riscv_top/imem_ctrl_inst/cache_blk/pma_blk/pmachk_inst/pmacfg;		\
	 log /$(TOP)/soc_top/cpu_subsys/riscv_top/imem_ctrl_inst/cache_blk/icache_inst/cache_memory_inst/tag_out	\
	 log /$(TOP)/soc_top/cpu_subsys/riscv_top/imem_ctrl_inst/cache_blk/icache_inst/cache_memory_inst/dat_out	\
	 log /$(TOP)/soc_top/cpu_subsys/riscv_top/dmem_ctrl_inst/cache_blk/pma_blk/pmachk_inst/pma_cfg_i;       \
	 log /$(TOP)/soc_top/cpu_subsys/riscv_top/dmem_ctrl_inst/cache_blk/pma_blk/pmachk_inst/pma_adr_i;       \
	 log /$(TOP)/soc_top/cpu_subsys/riscv_top/dmem_ctrl_inst/cache_blk/pma_blk/pmachk_inst/pma_ub;          \
	 log /$(TOP)/soc_top/cpu_subsys/riscv_top/dmem_ctrl_inst/cache_blk/pma_blk/pmachk_inst/pma_lb;          \
	 log /$(TOP)/soc_top/cpu_subsys/riscv_top/dmem_ctrl_inst/cache_blki/pma_blk/pmachk_inst/pmacfg;         \
	 log /$(TOP)/soc_top/bootrom_inst/ram_inst/genblk1/ram_inst/mem_array;					\
	 run -all; quit"				\
	$(foreach p, $(PARAMS),-g`echo $p | sed -r 's/(\w+)=([^0-9].*)/\1="\2"/'`)

simgate: vlog $(PLI)
	echo "--- Running gatelevel sim"
	vsim $(SIM_OPTS) $(PLI_OPTS)			\
	-l $(LOG) $(TOP)				\
	+transport_path_delays				\
	+transport_int_delays				\
	-sdfmax $(TOP)/dut=$(SDF)			\
	-suppress 3584,3389				\
	+access +r -wlf $(LOG).gate.wlf			\
	-do "log -r -rec /$(TOP)/*; run -all; quit"	\
	$(foreach p, $(PARAMS),-g`echo $p | sed -r 's/(\w+)=([^0-9].*)/\1="\2"/'`)

clean:
	@rm -rf work log

#################################################################
## VHDL
#################################################################

#################################################################
## Verilog
#################################################################
.PHONY: vlog

vlog: work $(VLOG) $(VLOG_LIBS)
	echo "--- Running vlog"
	vlog $(VLOG_OPTS) -work work $(VLOG)			\
	-sv							\
	$(foreach d,$(DEFINES),+define+$d)			\
	$(foreach d,$(INCDIRS),+incdir+$d)			\
	$(foreach l,$(wildcard $(LIBDIRS)),-y $l) 		\
	+libext$(foreach e,$(LIBEXT),+$e)			\
	$(foreach l,$(wildcard $(TECHLIBS)/*.v),-v $l)

#################################################################
## PLI
#################################################################

%.o : %.c
	echo "--- Compiling $@"
	$(CC) -c -m32 -fPIC -I `which vsim | sed -r 's/(.*modeltech).*/\1\/include/'` $< -o $@

ifeq ($(JTAG_DBG), VPI)
  PLI_OBJ = $(basename $(PLI)).o
else ifeq ($(JTAG_DBG), OPENOCD)
  PLI_OBJ = $(basename $(PLI)).o $(dir $(PLI))jtag_common.o
else
endif

$(PLI): $(PLI_OBJ)
	echo "--- linking JTAG-VPI $@"
	$(LD) -shared -m elf_i386 -fPIC -G -o $@ $?

#################################################################
## libraries
#################################################################
work:
	vlib $@
	mkdir -p log
